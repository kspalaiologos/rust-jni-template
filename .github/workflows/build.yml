name: Build fat JAR

on:
  push:
    branches: [ "main", "wip-darwin" ]
  pull_request:
    branches: [ "main", "wip-darwin" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-x86_64-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      run: curl https://sh.rustup.rs -sSf | sh -s -- -y
    - name: Build
      run: |
        cargo build --verbose --release --features unwind-stubs
        cp target/release/*.so linux-amd64.so
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: linux-amd64.so
        path: linux-amd64.so
  build-arm64-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust & GCC
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt update -y && sudo apt upgrade -y
        sudo apt install -y gcc-aarch64-linux-gnu
        rustup target add aarch64-unknown-linux-gnu
    - name: Build
      run: |
        CC=aarch64-linux-gnu-gcc RUSTFLAGS="-C linker=aarch64-linux-gnu-gcc" cargo build --release --target aarch64-unknown-linux-gnu --features unwind-stubs
        cp target/aarch64-unknown-linux-gnu/release/*.so linux-aarch64.so
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: linux-aarch64.so
        path: linux-aarch64.so
  build-s390x-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust & GCC
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt update -y && sudo apt upgrade -y
        sudo apt install -y gcc-s390x-linux-gnu
        rustup target add s390x-unknown-linux-gnu
    - name: Build
      run: |
        CC=s390x-linux-gnu-gcc RUSTFLAGS="-C linker=s390x-linux-gnu-gcc" cargo build --release --target s390x-unknown-linux-gnu --features unwind-stubs
        cp target/s390x-unknown-linux-gnu/release/*.so linux-s390x.so
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: linux-s390x.so
        path: linux-s390x.so
  build-i686-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust & GCC
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt update -y && sudo apt upgrade -y
        sudo apt install -y gcc-i686-linux-gnu
        rustup target add i686-unknown-linux-gnu
    - name: Build
      run: |
        CC=i686-linux-gnu-gcc RUSTFLAGS="-C linker=i686-linux-gnu-gcc" cargo build --release --target i686-unknown-linux-gnu --features unwind-stubs
        cp target/i686-unknown-linux-gnu/release/*.so linux-i386.so
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: linux-i386.so
        path: linux-i386.so
  build-armhf-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust & GCC
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt update -y && sudo apt upgrade -y
        sudo apt install -y gcc-arm-linux-gnueabihf
        rustup target add arm-unknown-linux-gnueabihf
    - name: Build
      run: |
        CC=arm-linux-gnueabihf-gcc RUSTFLAGS="-C linker=arm-linux-gnueabihf-gcc" cargo build --release --target arm-unknown-linux-gnueabihf --features unwind-stubs
        cp target/arm-unknown-linux-gnueabihf/release/*.so linux-arm.so
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: linux-arm.so
        path: linux-arm.so
  build-mips64-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust & GCC
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt update -y && sudo apt upgrade -y
        sudo apt install -y gcc-mips64-linux-gnuabi64
        rustup target add mips64-unknown-linux-gnuabi64
    - name: Build
      run: |
        CC=mips64-linux-gnuabi64-gcc RUSTFLAGS="-C linker=mips64-linux-gnuabi64-gcc" cargo build --release --target mips64-unknown-linux-gnuabi64 --features unwind-stubs
        cp target/mips64-unknown-linux-gnuabi64/release/*.so linux-mips64.so
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: linux-mips64.so
        path: linux-mips64.so
  build-riscv64-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust & GCC
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt update -y && sudo apt upgrade -y
        sudo apt install -y gcc-10-riscv64-linux-gnu
        rustup target add riscv64gc-unknown-linux-gnu
    - name: Build
      run: |
        CC=riscv64-linux-gnu-gcc-10 RUSTFLAGS="-C linker=riscv64-linux-gnu-gcc-10" cargo build --release --target riscv64gc-unknown-linux-gnu --features unwind-stubs
        cp target/riscv64gc-unknown-linux-gnu/release/*.so linux-riscv64.so
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: linux-riscv64.so
        path: linux-riscv64.so
  build-powerpc64-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust & GCC
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt update -y && sudo apt upgrade -y
        sudo apt install -y gcc-powerpc64-linux-gnu
        rustup target add powerpc64-unknown-linux-gnu
    - name: Build
      run: |
        CC=powerpc64-linux-gnu-gcc RUSTFLAGS="-C linker=powerpc64-linux-gnu-gcc" cargo build --release --target powerpc64-unknown-linux-gnu --features unwind-stubs
        cp target/powerpc64-unknown-linux-gnu/release/*.so linux-ppc64.so
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: linux-ppc64.so
        path: linux-ppc64.so
  build-powerpc64le-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust & GCC
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt update -y && sudo apt upgrade -y
        sudo apt install -y gcc-powerpc64le-linux-gnu
        rustup target add powerpc64le-unknown-linux-gnu
    - name: Build
      run: |
        CC=powerpc64le-linux-gnu-gcc RUSTFLAGS="-C linker=powerpc64le-linux-gnu-gcc" cargo build --release --target powerpc64le-unknown-linux-gnu --features unwind-stubs
        cp target/powerpc64le-unknown-linux-gnu/release/*.so linux-ppc64le.so
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: linux-ppc64le.so
        path: linux-ppc64le.so
  build-x86_64-darwin:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust & GCC
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt update -y && sudo apt upgrade -y
        rustup target add x86_64-apple-darwin
    - uses: mbround18/setup-osxcross@v1
      # This builds executables & sets env variables for rust to consume.
      with:
        osx-version: "12.3"
    - name: Build
      run: |
        export LIBZ_SYS_STATIC=1
        export CC=o64-clang
        export CXX=o64-clang++
        cargo build --release --target x86_64-apple-darwin --features unwind-stubs
        cp target/x86_64-apple-darwin/release/*.dylib darwin-x86_64.dylib
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: darwin-x86_64.dylib
        path: darwin-x86_64.dylib
  build-aarch64-darwin:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust & GCC
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt update -y && sudo apt upgrade -y
        rustup target add aarch64-apple-darwin
    - uses: mbround18/setup-osxcross@v1
      # This builds executables & sets env variables for rust to consume.
      with:
        osx-version: "12.3"
    - name: Build
      run: |
        export LIBZ_SYS_STATIC=1
        export CC="aarch64-apple-darwin21.4-clang -arch arm64e"
        export CXX="aarch64-apple-darwin21.4-clang++ -arch arm64e"
        RUSTFLAGS="-C linker=aarch64-apple-darwin21.4-clang" cargo build --release --target aarch64-apple-darwin --features unwind-stubs
        cp target/aarch64-apple-darwin/release/*.dylib darwin-aarch64.dylib
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: darwin-aarch64.dylib
        path: darwin-aarch64.dylib
  build-x86_64-netbsd:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run in x86_64 NetBSD.
      uses: cross-platform-actions/action@v0.13.0
      with:
        operating_system: netbsd
        architecture: x86-64
        version: 9.2
        shell: bash
        memory: 5G
        cpu_count: 4
        run: |
          sudo pkgin -y install clang
          curl https://sh.rustup.rs -sSfk | sh -s -- -y
          cargo build --verbose --release --features unwind-stubs
          cp target/release/*.so netbsd-amd64.so
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: netbsd-amd64.so
        path: netbsd-amd64.so
  build-x86_64-mingw:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust & GCC
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt update -y && sudo apt upgrade -y
        sudo apt install -y gcc-mingw-w64-x86-64
        rustup target add x86_64-pc-windows-gnu
    - name: Build
      run: |
        CC=x86_64-w64-mingw32-gcc RUSTFLAGS="-C linker=x86_64-w64-mingw32-gcc" cargo build --release --target x86_64-pc-windows-gnu
        cp target/x86_64-pc-windows-gnu/release/*.dll win-amd64.dll
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: win-amd64.dll
        path: win-amd64.dll
  build-i686-mingw:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust & GCC
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        sudo apt install -y gcc-mingw-w64-i686
        sudo apt update -y && sudo apt upgrade -y
        rustup target add i686-pc-windows-gnu
    - name: Build
      run: |
        CC=i686-w64-mingw32-gcc RUSTFLAGS="-C linker=i686-w64-mingw32-gcc -Clink-args=--disable-stdcall-fixup" cargo build --release --target i686-pc-windows-gnu --features unwind-stubs
        cp target/i686-pc-windows-gnu/release/*.dll win-x86.dll
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: win-x86.dll
        path: win-x86.dll
  build-jar:
    runs-on: ubuntu-latest
    needs: [build-x86_64-darwin, build-aarch64-darwin, build-i686-mingw, build-x86_64-mingw, build-powerpc64le-linux, build-powerpc64-linux, build-riscv64-linux, build-mips64-linux, build-armhf-linux, build-i686-linux, build-s390x-linux, build-arm64-linux, build-x86_64-linux]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '19'
        cache: 'maven'
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: java/src/main/resources/native
    - name: Build
      run: |
        ls -R java
        cd java && mvn -B package --file pom.xml
    - name: Upload a fat JAR
      uses: actions/upload-artifact@v3.1.1
      with:
        name: example.jar
        path: java/target/example-1.0.0.jar
